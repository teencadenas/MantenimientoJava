/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import control.ControlIngreso;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author teenc
 */
public class PrincipalFrm extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalFrm
     */
    ControlIngreso ci = new ControlIngreso();

    public PrincipalFrm() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        pnelPrueba = new javax.swing.JPanel();
        btnIngresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        mnCliente = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        mnEmpleado = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        mnServicio = new javax.swing.JMenu();
        mnCrearServicio = new javax.swing.JMenuItem();
        mnOrden = new javax.swing.JMenuItem();
        mnRealizado = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GestionMantenimiento");
        setName("fPrincipal"); // NOI18N
        setUndecorated(true);

        escritorio.setMaximumSize(new java.awt.Dimension(1000, 600));
        escritorio.setMinimumSize(new java.awt.Dimension(1000, 600));
        escritorio.setRequestFocusEnabled(false);

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Login");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Usuario");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Contrase√±a");

        txtContrasena.setText("49048439567");

        txtUsuario.setText("ACa490@mantenimiento.co");

        javax.swing.GroupLayout pnelPruebaLayout = new javax.swing.GroupLayout(pnelPrueba);
        pnelPrueba.setLayout(pnelPruebaLayout);
        pnelPruebaLayout.setHorizontalGroup(
            pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnelPruebaLayout.createSequentialGroup()
                .addGroup(pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnelPruebaLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtContrasena)
                            .addComponent(txtUsuario)))
                    .addGroup(pnelPruebaLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btnIngresar))
                    .addGroup(pnelPruebaLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel1)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pnelPruebaLayout.setVerticalGroup(
            pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnelPruebaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnIngresar)
                .addGap(28, 28, 28))
        );

        escritorio.setLayer(pnelPrueba, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioLayout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(pnelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(760, Short.MAX_VALUE))
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(pnelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(886, Short.MAX_VALUE))
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jMenuBar1.setMaximumSize(new java.awt.Dimension(1200, 600));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(1200, 600));

        jMenu1.setText("Archivo");

        jMenuItem4.setText("Salir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        mnCliente.setText("Cliente");
        mnCliente.setEnabled(false);

        jMenuItem1.setText("Cliente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnCliente.add(jMenuItem1);

        jMenuItem5.setText("Unidad Comercial");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        mnCliente.add(jMenuItem5);

        jMenuBar1.add(mnCliente);

        mnEmpleado.setText("Empleado");
        mnEmpleado.setEnabled(false);

        jMenuItem2.setText("Crear");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        mnEmpleado.add(jMenuItem2);

        jMenuBar1.add(mnEmpleado);

        mnServicio.setText("Servicio");
        mnServicio.setEnabled(false);

        mnCrearServicio.setText("Crear");
        mnCrearServicio.setEnabled(false);
        mnCrearServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCrearServicioActionPerformed(evt);
            }
        });
        mnServicio.add(mnCrearServicio);

        mnOrden.setText("OrdenTrabajo");
        mnOrden.setEnabled(false);
        mnOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnOrdenActionPerformed(evt);
            }
        });
        mnServicio.add(mnOrden);

        mnRealizado.setText("ServicioRealizados");
        mnRealizado.setEnabled(false);
        mnRealizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnRealizadoActionPerformed(evt);
            }
        });
        mnServicio.add(mnRealizado);

        jMenuBar1.add(mnServicio);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            //Mostrar formulario cracion cliente
            CrearClienteFrm crearCliente = new CrearClienteFrm();
            escritorio.add(crearCliente);
            crearCliente.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(PrincipalFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        //Salir de la aplicacion 
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void mnCrearServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCrearServicioActionPerformed
        //Formulario servicio
        servicioFrm crearServicio = new servicioFrm();
        escritorio.add(crearServicio);
        crearServicio.setVisible(true);
    }//GEN-LAST:event_mnCrearServicioActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        //Formualrio unidad comercial
        unidadComercialFrm ucf = new unidadComercialFrm();
        escritorio.add(ucf);
        ucf.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // formulario empleado
        registroEmpleadoFrm re = new registroEmpleadoFrm();
        escritorio.add(re);
        re.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mnOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnOrdenActionPerformed
        //formulario orden trabajo
        OrdenTrabajoFrm otf = new OrdenTrabajoFrm();
        escritorio.add(otf);
        otf.setVisible(true);
    }//GEN-LAST:event_mnOrdenActionPerformed

    private void mnRealizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnRealizadoActionPerformed
        //formulario cierre de servicio
        ServiciosRealizadosFrm srf = new ServiciosRealizadosFrm();
        escritorio.add(srf);
        srf.setVisible(true);
    }//GEN-LAST:event_mnRealizadoActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        
        //boton accion de formulario para ingreso
        //Condicional de texto vacio
        if (validarTxt()) {
            validarUsuario();
        } else {
            JOptionPane.showMessageDialog(null, "Casillas sin datos, complete la informacion");
            limpiarTxt();
        }

    }//GEN-LAST:event_btnIngresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PrincipalFrm().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenu mnCliente;
    private javax.swing.JMenuItem mnCrearServicio;
    private javax.swing.JMenu mnEmpleado;
    private javax.swing.JMenuItem mnOrden;
    private javax.swing.JMenuItem mnRealizado;
    private javax.swing.JMenu mnServicio;
    private javax.swing.JPanel pnelPrueba;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    //ValidAR CASILLAS LLENAS
    public boolean validarTxt() {

        String texto = "";
        return !(txtContrasena.getText().equals(texto) || txtUsuario.getText().equals(texto));

    }

    //Alerta de casillas vacias
    public void alerta() {

        if (!validarTxt()) {
            JOptionPane.showMessageDialog(null, "Casillas sin datos, complete la informacion");
        }

    }

    public void validarUsuario() {

        //Creacion lista para recescion de respuesta
        ArrayList<String> lista = new ArrayList<>();

        try {

            //Se toman los datos del formulario de ingreso
            String usuario = txtUsuario.getText();
            String contrasena = txtContrasena.getText();

            //Se realiza consulta
            lista = ci.validarIngreso(usuario, contrasena);

            //Consicional con/sin respuesta
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Usuaio no encontrado");
                limpiarTxt();
            } else {

                //Se toman los resultados
                String estado = lista.get(1);
                String rol = lista.get(0);

                //Consicional estado del empleado  
                if (!"activo".equals(estado)) {
                    JOptionPane.showMessageDialog(null, "Usuario no Disponible");
                    limpiarTxt();
                } else {

                    //Condicional tipo de usuario y activaciones
                    switch (rol) {
                        case "operario" -> {
                            mnServicio.setEnabled(true);
                            mnRealizado.setEnabled(true);
                        }
                        case "analista" -> {
                            mnServicio.setEnabled(true);
                            mnOrden.setEnabled(true);
                        }
                        case "direccion" -> {
                            mnCliente.setEnabled(true);
                            mnEmpleado.setEnabled(true);
                            mnServicio.setEnabled(true);
                            mnCrearServicio.setEnabled(true);
                        }
                        default ->
                            throw new AssertionError();
                    }

                }
                //Cierre formulario de ingreso    
                pnelPrueba.setVisible(false);

            }

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    //Limpiar textos
    public void limpiarTxt() {
        txtContrasena.setText("");
        txtUsuario.setText("");
    }
}
